.container1 {
  margin: 20px;
  display: grid; /*! inline-grid = grid where it doesnt take all space */
  grid-template-columns: 100px 50px;
  grid-template-rows: 70px 50px;
}
.container2 {
  margin: 20px;
  display: grid;
  grid-template-columns: 50px 50px 50px;
  grid-template-rows: 50px 50px;
  /*?: grid-template: 50px 50px / 50px 50px 50px; = grid-template: rows / columns */
}
.container3 {
  margin: 20px;
  display: grid;
  grid-template-columns: 50px 50px;
  grid-template-rows: 50px 50px;
  grid-auto-rows: 50px;
  column-gap: 10px;
  row-gap: 20px;
}
[class^="container"] > div {
  border: 1px solid blue;
}
.container4 {
  margin: 20px;
  display: grid;
  grid-template-columns: 1fr 50px 1fr; /*! fr = free space */
  grid-template-rows: 1fr 50px;
}

/**assign name to the lines of grid */
.container5 {
  margin: 20px;
  display: grid;
  grid-template-columns: [first] 40px [line2] 50px [line3] auto [col4-start] 50px [five] 40px [end];
  grid-template-rows: [row1-start] 25% [row1-end row2-start] 100px [third-line] auto [last-line]; /*! [name of the line] */
  grid-auto-rows: 50px;
  grid-auto-columns: 50px;
}

/**creating item specified by the line of grid */
/* 
<line> – can be a number to refer to a numbered grid line, or a name to refer to a named grid line
span <number> – the item will span across the provided number of grid tracks
span <name> – the item will span across until it hits the next line with the provided name
auto – indicates auto-placement, an automatic span, or a default span of one

!grid-column-start: <number> | <name> | span <number> | span <name> | auto;

*/
.item-a {
  background-color: green;
  grid-column-start: 2; /* <line> */
  grid-column-end: five;
  grid-row-start: row1-start;
  grid-row-end: 3;
}
.item-b {
  background-color: grey;
  grid-column-start: first;
  grid-column-end: span 3;
  grid-row-start: third-line;
  grid-row-end: last-line;

  /* 
? =
? grid-column: first / 4;
? grid-row: third-line / last-line;

?=
? grid-area: third-line / first / last-line / 4;
*/
}
.item-c {
  background-color: black;
  grid-row-start: row2-start;
  grid-column-start: 3;
}
/* repeat(3, 20px [col-start]) = 20px [col-start] 20px [col-start] 20px [col-start] */

.container6 {
  margin: 40px;
  display: inline-grid;
  grid-template: 60px 60px 60px 60px 60px / 60px 60px 60px 60px 60px;
  background-color: lightblue;

  /*? naming each cell */
  grid-template-areas:
    "living-room living-room living-room living-room living-room"
    "living-room living-room living-room living-room living-room"
    "bedroom bedroom bathroom kitchen kitchen"
    "bedroom bedroom bathroom kitchen kitchen"
    "closet closet bathroom . .";
}

.room {
  border: 1px solid;
  font-size: 50%;
  text-align: center;
}

#living-room {
  grid-area: living-room;
}

#kitchen {
  grid-area: kitchen;
}

#bedroom {
  grid-area: bedroom;
}

#bathroom {
  grid-area: bathroom;
}

#closet {
  grid-area: closet;
}
