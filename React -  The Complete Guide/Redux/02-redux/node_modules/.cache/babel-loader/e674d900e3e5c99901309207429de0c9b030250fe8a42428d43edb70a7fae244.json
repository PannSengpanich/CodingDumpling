{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nconst initialState1 = {\n  counter: 0,\n  showCounter: true\n};\nconst initialState2 = {\n  counter: 5,\n  modifiedCounter: false\n};\n\n// can mutate the state unlike using reducer function\nconst counterSlice1 = createSlice({\n  name: \"counter1\",\n  initialState1,\n  reducers: {\n    // receive current state and action as first and second parameter\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst counterSlice2 = createSlice({\n  name: \"counter2\",\n  initialState1,\n  reducers: {\n    // receive current state and action as first and second parameter\n    double(state) {\n      state.counter = state.counter * state.counter;\n    },\n    half(state) {\n      state.counter = state.counter * state.counter;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n//store\nconst store = configureStore({\n  reducer1: counterSlice1.reducer,\n  reducer2: counterSlice2.reducer\n  // Apply Redux DevTools extension\n});\n\n//contains generated action creators for each reducer action\nexport const counterActions = counterSlice1.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","composeWithDevTools","initialState1","counter","showCounter","initialState2","modifiedCounter","counterSlice1","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","counterSlice2","double","half","store","reducer1","reducer","reducer2","counterActions","actions"],"sources":["/Users/pannsengpanich/repos/CodingDumpling/React -  The Complete Guide/Redux/02-redux/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst initialState1 = { counter: 0, showCounter: true };\nconst initialState2 = { counter: 5, modifiedCounter: false };\n\n// can mutate the state unlike using reducer function\nconst counterSlice1 = createSlice({\n  name: \"counter1\",\n  initialState1,\n  reducers: {\n    // receive current state and action as first and second parameter\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\nconst counterSlice2 = createSlice({\n  name: \"counter2\",\n  initialState1,\n  reducers: {\n    // receive current state and action as first and second parameter\n    double(state) {\n      state.counter = state.counter * state.counter;\n    },\n    half(state) {\n      state.counter = state.counter * state.counter;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\n//store\nconst store = configureStore({\n  reducer1: counterSlice1.reducer,\n  reducer2: counterSlice2.reducer,\n  // Apply Redux DevTools extension\n});\n\n//contains generated action creators for each reducer action\nexport const counterActions = counterSlice1.actions;\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAC9D,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,MAAMC,aAAa,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AACvD,MAAMC,aAAa,GAAG;EAAEF,OAAO,EAAE,CAAC;EAAEG,eAAe,EAAE;AAAM,CAAC;;AAE5D;AACA,MAAMC,aAAa,GAAGR,WAAW,CAAC;EAChCS,IAAI,EAAE,UAAU;EAChBN,aAAa;EACbO,QAAQ,EAAE;IACR;IACAC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACR,OAAO,EAAE;IACjB,CAAC;IACDS,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACR,OAAO,EAAE;IACjB,CAAC;IACDU,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACR,OAAO,GAAGQ,KAAK,CAACR,OAAO,GAAGW,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACP,WAAW,GAAG,CAACO,KAAK,CAACP,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AACF,MAAMa,aAAa,GAAGlB,WAAW,CAAC;EAChCS,IAAI,EAAE,UAAU;EAChBN,aAAa;EACbO,QAAQ,EAAE;IACR;IACAS,MAAMA,CAACP,KAAK,EAAE;MACZA,KAAK,CAACR,OAAO,GAAGQ,KAAK,CAACR,OAAO,GAAGQ,KAAK,CAACR,OAAO;IAC/C,CAAC;IACDgB,IAAIA,CAACR,KAAK,EAAE;MACVA,KAAK,CAACR,OAAO,GAAGQ,KAAK,CAACR,OAAO,GAAGQ,KAAK,CAACR,OAAO;IAC/C,CAAC;IACDU,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACR,OAAO,GAAGQ,KAAK,CAACR,OAAO,GAAGW,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACP,WAAW,GAAG,CAACO,KAAK,CAACP,WAAW;IACxC;EACF;AACF,CAAC,CAAC;;AAEF;AACA,MAAMgB,KAAK,GAAGpB,cAAc,CAAC;EAC3BqB,QAAQ,EAAEd,aAAa,CAACe,OAAO;EAC/BC,QAAQ,EAAEN,aAAa,CAACK;EACxB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAME,cAAc,GAAGjB,aAAa,CAACkB,OAAO;AACnD,eAAeL,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}