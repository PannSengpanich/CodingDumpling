{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\n\n// can mutate the state unlike using reducer function\nconst counterSlice1 = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    // receive current state and action as first and second parameter\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n//store\nconst store = configureStore({\n  reducer: counterSlice1.reducer\n  // Apply Redux DevTools extension\n});\n\n//contains generated action creators for each reducer action\nexport const counterActions = counterSlice1.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","composeWithDevTools","initialState","counter","showCounter","counterSlice1","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","store","reducer","counterActions","actions"],"sources":["/Users/pannsengpanich/repos/CodingDumpling/React -  The Complete Guide/Redux/02-redux/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst initialState = { counter: 0, showCounter: true };\n\n// can mutate the state unlike using reducer function\nconst counterSlice1 = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    // receive current state and action as first and second parameter\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\n//store\nconst store = configureStore({\n  reducer: counterSlice1.reducer,\n  // Apply Redux DevTools extension\n});\n\n//contains generated action creators for each reducer action\nexport const counterActions = counterSlice1.actions;\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAC9D,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;;AAEtD;AACA,MAAMC,aAAa,GAAGN,WAAW,CAAC;EAChCO,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACR;IACAC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;;AAEF;AACA,MAAMW,KAAK,GAAGf,cAAc,CAAC;EAC3BgB,OAAO,EAAEX,aAAa,CAACW;EACvB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,cAAc,GAAGZ,aAAa,CAACa,OAAO;AACnD,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}