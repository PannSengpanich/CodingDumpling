{"ast":null,"code":"var _jsxFileName = \"/Users/pannsengpanich/repos/CodingDumpling/React -  The Complete Guide/Redux/02-redux/src/components/Counter.js\",\n  _s = $RefreshSig$();\nimport classes from \"./Counter.module.css\";\n\n// useSelector: allows functional components to access data from the Redux store's state\n// accept selector function as arg, return selected data from the store\n// useDispatch: a way to access the dispatch function, trigger state updates in the Redux store\n// connect: is used for class-based component\n\n// Component rerender when store's state is updated\nimport { useSelector, useDispatch, connect } from \"react-redux\";\n\n//will be re-rendered when there are changes in redux store\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  //dispatch an action against our redux store\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter);\n  const show = useSelector(state => state.showCounter);\n  const incrementHandler = () => {\n    dispatch({\n      type: \"increment\"\n    });\n  };\n  const increaseHandler = () => {\n    dispatch({\n      type: \"increase\",\n      amount: 5\n    });\n  };\n  const decrementHandler = () => {\n    dispatch({\n      type: \"decrement\"\n    });\n  };\n  const toggleCounterHandler = () => {\n    dispatch({\n      type: \"toggle\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), show ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseHandler,\n        children: \"Increase by 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"a6W6bcAuHVADZPU2xn93xNQZltc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["classes","useSelector","useDispatch","connect","jsxDEV","_jsxDEV","Fragment","_Fragment","Counter","_s","dispatch","counter","state","show","showCounter","incrementHandler","type","increaseHandler","amount","decrementHandler","toggleCounterHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onClick","_c","$RefreshReg$"],"sources":["/Users/pannsengpanich/repos/CodingDumpling/React -  The Complete Guide/Redux/02-redux/src/components/Counter.js"],"sourcesContent":["import classes from \"./Counter.module.css\";\n\n// useSelector: allows functional components to access data from the Redux store's state\n// accept selector function as arg, return selected data from the store\n// useDispatch: a way to access the dispatch function, trigger state updates in the Redux store\n// connect: is used for class-based component\n\n// Component rerender when store's state is updated\nimport { useSelector, useDispatch, connect } from \"react-redux\";\n\n//will be re-rendered when there are changes in redux store\nconst Counter = () => {\n  //dispatch an action against our redux store\n  const dispatch = useDispatch();\n\n  const counter = useSelector((state) => state.counter);\n  const show = useSelector((state) => state.showCounter);\n\n  const incrementHandler = () => {\n    dispatch({ type: \"increment\" });\n  };\n  const increaseHandler = () => {\n    dispatch({ type: \"increase\", amount: 5 });\n  };\n  const decrementHandler = () => {\n    dispatch({ type: \"decrement\" });\n  };\n  const toggleCounterHandler = () => {\n    dispatch({ type: \"toggle\" });\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {show ? <div className={classes.value}>{counter}</div> : <></>}\n      <div>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaseHandler}>Increase by 5</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,sBAAsB;;AAE1C;AACA;AACA;AACA;;AAEA;AACA,SAASC,WAAW,EAAEC,WAAW,EAAEC,OAAO,QAAQ,aAAa;;AAE/D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMS,OAAO,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACD,OAAO,CAAC;EACrD,MAAME,IAAI,GAAGZ,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACE,WAAW,CAAC;EAEtD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BL,QAAQ,CAAC;MAAEM,IAAI,EAAE;IAAY,CAAC,CAAC;EACjC,CAAC;EACD,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BP,QAAQ,CAAC;MAAEM,IAAI,EAAE,UAAU;MAAEE,MAAM,EAAE;IAAE,CAAC,CAAC;EAC3C,CAAC;EACD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BT,QAAQ,CAAC;MAAEM,IAAI,EAAE;IAAY,CAAC,CAAC;EACjC,CAAC;EACD,MAAMI,oBAAoB,GAAGA,CAAA,KAAM;IACjCV,QAAQ,CAAC;MAAEM,IAAI,EAAE;IAAS,CAAC,CAAC;EAC9B,CAAC;EAED,oBACEX,OAAA;IAAMgB,SAAS,EAAErB,OAAO,CAACW,OAAQ;IAAAW,QAAA,gBAC/BjB,OAAA;MAAAiB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBb,IAAI,gBAAGR,OAAA;MAAKgB,SAAS,EAAErB,OAAO,CAAC2B,KAAM;MAAAL,QAAA,EAAEX;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAAGrB,OAAA,CAAAE,SAAA,mBAAI,CAAC,eAC9DF,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAQuB,OAAO,EAAEb,gBAAiB;QAAAO,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrDrB,OAAA;QAAQuB,OAAO,EAAEX,eAAgB;QAAAK,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxDrB,OAAA;QAAQuB,OAAO,EAAET,gBAAiB;QAAAG,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACNrB,OAAA;MAAQuB,OAAO,EAAER,oBAAqB;MAAAE,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEX,CAAC;AAACjB,EAAA,CAhCID,OAAO;EAAA,QAEMN,WAAW,EAEZD,WAAW,EACdA,WAAW;AAAA;AAAA4B,EAAA,GALpBrB,OAAO;AAkCb,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}