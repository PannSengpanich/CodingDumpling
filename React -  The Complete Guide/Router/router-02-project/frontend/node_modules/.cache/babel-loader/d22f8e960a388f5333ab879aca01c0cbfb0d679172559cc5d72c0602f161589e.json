{"ast":null,"code":"var _jsxFileName = \"/Users/pannsengpanich/repos/CodingDumpling/React -  The Complete Guide/Router/router-02-project/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport EventsPage from \"./pages/EventsPage\";\nimport EventDetailPage from \"./pages/EventDetailPage\";\nimport NewEventPage from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport MainNavigation from \"./components/MainNavigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 14\n  }, this),\n  children: []\n}, {\n  index: true,\n  element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 27\n  }, this)\n}, {\n  path: \"events\",\n  element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 30\n  }, this)\n}, {\n  path: \"events/:id\",\n  element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 34\n  }, this)\n}, {\n  path: \"events/new\",\n  element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 34\n  }, this)\n}, {\n  path: \"events/:id/edit\",\n  element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 39\n  }, this)\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventsPage","EventDetailPage","NewEventPage","EditEventPage","MainNavigation","jsxDEV","_jsxDEV","router","path","element","RootLayout","fileName","_jsxFileName","lineNumber","columnNumber","children","index","App","_c","$RefreshReg$"],"sources":["/Users/pannsengpanich/repos/CodingDumpling/React -  The Complete Guide/Router/router-02-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport EventsPage from \"./pages/EventsPage\";\nimport EventDetailPage from \"./pages/EventDetailPage\";\nimport NewEventPage from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport MainNavigation from \"./components/MainNavigation\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootLayout></RootLayout>,\n    children: [],\n  },\n  { index: true, element: <HomePage></HomePage> },\n  { path: \"events\", element: <EventsPage></EventsPage> },\n  { path: \"events/:id\", element: <EventDetailPage></EventDetailPage> },\n  { path: \"events/new\", element: <NewEventPage></NewEventPage> },\n  { path: \"events/:id/edit\", element: <EditEventPage></EditEventPage> },\n]);\n\nfunction App() {\n  return <RouterProvider router={router}></RouterProvider>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,cAAc,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,MAAM,GAAGV,mBAAmB,CAAC,CACjC;EACEW,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACI,UAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAa,CAAC;EAClCC,QAAQ,EAAE;AACZ,CAAC,EACD;EAAEC,KAAK,EAAE,IAAI;EAAEP,OAAO,eAAEH,OAAA,CAACP,QAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAW;AAAE,CAAC,EAC/C;EAAEN,IAAI,EAAE,QAAQ;EAAEC,OAAO,eAAEH,OAAA,CAACN,UAAU;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAa;AAAE,CAAC,EACtD;EAAEN,IAAI,EAAE,YAAY;EAAEC,OAAO,eAAEH,OAAA,CAACL,eAAe;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAkB;AAAE,CAAC,EACpE;EAAEN,IAAI,EAAE,YAAY;EAAEC,OAAO,eAAEH,OAAA,CAACJ,YAAY;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAe;AAAE,CAAC,EAC9D;EAAEN,IAAI,EAAE,iBAAiB;EAAEC,OAAO,eAAEH,OAAA,CAACH,aAAa;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAgB;AAAE,CAAC,CACtE,CAAC;AAEF,SAASG,GAAGA,CAAA,EAAG;EACb,oBAAOX,OAAA,CAACR,cAAc;IAACS,MAAM,EAAEA;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAiB,CAAC;AAC1D;AAACI,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}